name: Build and Publish Docker Image to GHCR and Docker Hub

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        run: |
          VERSION=${{ github.ref }}
          VERSION=${VERSION#refs/tags/}
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image with multiple tags
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest \
                       -t ghcr.io/${{ github.repository }}:${{ env.VERSION }} .

      - name: Push both tags to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ env.VERSION }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag images for Docker Hub
        run: |
          # Extract repository name for Docker Hub (remove owner prefix)
          DOCKER_REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          
          # Tag latest version
          docker tag ghcr.io/${{ github.repository }}:latest docker.io/${{ secrets.DOCKERHUB_REPOSITORY }}/$DOCKER_REPO_NAME:latest
          
          # Tag versioned release
          docker tag ghcr.io/${{ github.repository }}:${{ env.VERSION }} docker.io/${{ secrets.DOCKERHUB_REPOSITORY }}/$DOCKER_REPO_NAME:${{ env.VERSION }}

      - name: Push both tags to Docker Hub
        run: |
          # Extract repository name for Docker Hub
          DOCKER_REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          
          # Push latest version
          docker push docker.io/${{ secrets.DOCKERHUB_REPOSITORY }}/$DOCKER_REPO_NAME:latest
          
          # Push versioned release
          docker push docker.io/${{ secrets.DOCKERHUB_REPOSITORY }}/$DOCKER_REPO_NAME:${{ env.VERSION }}